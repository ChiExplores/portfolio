{"version":3,"sources":["2048.ico","dtr.ico","favicon-4.ico","flight-logger.ico","images/2048-demo.gif","images/sdt-demo.gif","images/dtr-demo.png","images/flight-demo.png","images/cloud-background.jpg","logo.ico","Project.jsx","About.jsx","2048.jsx","AStardustTruce.jsx","Dtr.jsx","FlightLogger.jsx","Navigation.jsx","Header.jsx","Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Project","props","className","onClick","src","flightlogger","alt","id","dtr","project1","stardust","About","Twentyfourtyeight","demo","href","target","rel","AStardustTruce","DTR","FlightLogger","Navigation","links","navLinks","map","section","idx","key","this","logoTitle","Component","background","window","innerWidth","backgroundImage","desktopImage","nav","Header","React","useState","height","innerHeight","width","useEffect","style","MyForm","submitForm","bind","state","status","Form","onSubmit","action","method","Label","Control","type","name","as","Button","ev","preventDefault","form","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","App","projectNum","setProjectNum","main","Container","Row","Col","xs","md","lg","e","parseInt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8dc279a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2048.8d95fe35.ico\";","module.exports = __webpack_public_path__ + \"static/media/dtr.624e7c20.ico\";","module.exports = __webpack_public_path__ + \"static/media/favicon-4.76fe893a.ico\";","module.exports = __webpack_public_path__ + \"static/media/flight-logger.b39430d4.ico\";","module.exports = __webpack_public_path__ + \"static/media/2048-demo.3f7290c0.gif\";","module.exports = __webpack_public_path__ + \"static/media/sdt-demo.7052c441.gif\";","module.exports = __webpack_public_path__ + \"static/media/dtr-demo.8aef3d4e.png\";","module.exports = __webpack_public_path__ + \"static/media/flight-demo.4b037a44.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud-background.983ef34e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.43a77da7.ico\";","import React from 'react';\nimport project1 from './2048.ico';\nimport dtr from './dtr.ico';\nimport stardust from './favicon-4.ico';\nimport flightlogger from './flight-logger.ico';\nimport logo from './logo.ico';\nimport './Project.scss';\n\nconst Project = (props) => {\n  return (\n    <div className='project-menu col'>\n      {/* <div className='about-icon'>\n        <button className='about' onClick={props.onClick} >\n          <img src={logo} className=\"about-logo\" alt=\"about\" id='0' />\n        </button>About\n\t\t\t</div> */}\n      <div className='col project-icon text-center' >\n        <button className='flight-logger' onClick={props.onClick} >\n          <img src={flightlogger} className=\"flight-logger-logo\" alt=\"flight-logger\" id='1' />\n        </button>\n        Flight Logger\n\t\t\t</div>\n\n      <div className='project-icon'>\n        <button className='dtr' onClick={props.onClick} >\n          <img src={dtr} className=\"Dtr-logo\" alt=\"dtr\" id='2' />\n        </button>\n          DTR\n\t\t\t</div>\n      <div className='project-icon'>\n        <button className='2048' onClick={props.onClick}>\n          <img src={project1} className=\"2048-logo\" alt=\"2048\" id='3' />\n        </button>\n          2048\n\t\t</div>\n      <div className='project-icon'>\n        <button className='stardust-truce' onClick={props.onClick}>\n          <img src={stardust} className=\"stardust-truce-logo\" alt=\"stardust-truce\" id='4' />\n        </button>\n          <p>Stardust Truce</p>\n\t\t</div>\n    </div>\n  );\n}\n\nexport default Project;","import React from 'react';\nimport './About.scss'\n\nconst About = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<div className='introduction' id='about'>\n\t\t\t\t<p>Chi Huynh:</p>\n\t\t\t\t<p id='description' className='about'>\n\t\t\t\t\tKnowedge is power, but sharing knowledge is progress.\n\t\t\t\t\tMy interest in computers deepened when I learned about the history of Smalltalk-80, a language created by the Xerox Research Group.\n\t\t\t\t\tI became inspired and gave two tech talks in the last two years about Pharo, a Smalltalk language. I also voluteered at a European Smalltalk User Group event and learned a lot from the mentors I got to know there.\n\n\t\t\t\t\tNow, I am looking for companies focused on e-learning because I believe that people could start learning by using computers as a medium to understand anything from arts and sciences.\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t</>\n\t);\n}\n\nexport default About; ","import React from 'react';\nimport demo from './images/2048-demo.gif'\n\n\nconst Twentyfourtyeight = () => {\n\treturn (\n\t\t<>\n\t\t\t<h1>About Project</h1>\n\t\t\t<img src={demo} className=\"demo-img\" alt=\"2048-demo\"/>\n\t\t\t<p className = 'about'>This was a simple 2048 game where you move the tiles with the arrow keys on your keyboard to match numbers to add up to 2048. I had fun learning how to rotate a matrix so that I can move the boxes left or right and decide whether or not to add the numbers if the adjacents ones match. </p>\n\t\t\t<h2>Tech Stack</h2>\n\t\t\t<p>\n\t\t\t\t-Vanilla JS\n\t\t\t\t- HTML\n\t\t\t\t- CSS\n\t\t\t\t</p>\n\t\t\t<a href='https://github.com/ChiExplores/2048/blob/master/README.md' target=\"_blank\" rel=\"noopener noreferrer\">\t<h4>README HERE</h4></a>\n\t\t\t<a href='https://chiexplores.github.io/2048/' target=\"_blank\" rel=\"noopener noreferrer\">Play Game Here</a>\n\n\t\t</>\n\t);\n}\n\nexport default Twentyfourtyeight;\n","import React from 'react';\nimport demo from './images/sdt-demo.gif'\n\nconst AStardustTruce = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>About Project</h1>\n\t\t\t<img src={demo} className=\"demo-img\" alt=\"stardust truce demo gif\"/>\n\t\t\t<p className='about'>This is a fun project to help students learn how to implement different data structures. I worked with two other devs and was in charge of the git workflow. We worked on branch features (initials_feature) and pushed to dev when ready. My team did code reviews (you are not allow to approve ro review your own code) and when we were ready, we push code to master. </p>\n\t\t\t<h2>Tech Stack</h2>\n\t\t\t<p>\n\t\t\t\t- Django\n\t\t\t\t- Python3\n\t\t\t\t- PosgreSQL\n\t\t\t\t- HTML\n\t\t\t\t- SCSS\n\t\t\t\t</p>\n\n\t\t\t<a href='https://github.com/ChiExplores/a-stardust-truce/blob/dev/README.md' target=\"_blank\" rel=\"noopener noreferrer\"><h4>README HERE</h4></a>\n\t\t\t<a href='https://astardusttruce.herokuapp.com/' target=\"_blank\" rel=\"noopener noreferrer\">Check it out here!</a>\n\t\t</>\n\t);\n}\n\nexport default AStardustTruce;","import React from 'react';\nimport demo from './images/dtr-demo.png'\n\nconst DTR = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>About Project</h1>\n\t\t\t<img src={demo} className=\"demo-img\" alt=\"dtr demo image\"/> \n\t\t\t<p className = 'about'>DTR stands for Down the Rabbit hole, but also Define The Relationship between Wikimedia pages. I learned that when you webscrape, you have to really look into the site's html tree to understand where you want to scrape to look for the information you need. </p>\n\t\t\t<h2>Tech Stack</h2>\n\t\t\t<p>\n\t\t\t\t- React\n\t\t\t\t- Javascript\n\t\t\t\t- MongoDB\n\t\t\t\t- Express\n\t\t\t\t- NodeJS\n\t\t\t\t- HTML\n\t\t\t\t- SCSS\n\t\t\t\t</p>\n\t\t\t<a href='https://github.com/ChiExplores/dtr/blob/master/README.md' target=\"_blank\" rel=\"noopener noreferrer\"><h4>README HERE</h4></a>\n\t\t\t<a href='https://ga-dtr.herokuapp.com/login' target=\"_blank\" rel=\"noopener noreferrer\">Link to Project</a>\n\t\t</>\n\t);\n}\n\nexport default DTR;","import React from 'react';\nimport demo from './images/flight-demo.png'\n\nconst FlightLogger = (props) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>About Project</h1>\n\t\t\t<img src={demo} className=\"demo-img\"></img>\n\t\t\t<p className = 'about'>I am a student pilot and as a pilot, you get a physical flight logger for instructors to sign you off when you take lessons. I decided I could make my own logger where you can input the date, description, plane, and instructor you were with for each lesson.</p>\n\t\t\t<h2>Tech Stack</h2>\n\t\t\t<p>\n\t\t\t\t- Javascript\n\t\t\t\t- Express\n\t\t\t\t- NodeJS\n\t\t\t\t- HTML\n\t\t\t\t- CSS\n\t\t\t\t</p>\n\n\t\t\t<a href='https://github.com/ChiExplores/flight-log-book/blob/master/README.md' target=\"_blank\" rel=\"noopener noreferrer\"><h4>README and Github</h4></a>\n\t\t\t<a href='http://sei-flight-logger.herokuapp.com/students' target=\"_blank\" rel=\"noopener noreferrer\">Link to Project</a>\n\t\t</>\n\t);\n}\n\nexport default FlightLogger;","import React, { Component } from 'react';\nimport './Navigation.scss'\n\n\nclass Navigation extends Component {\n  render() {\n    const sections = ['Home', 'Github', 'Medium'];\n    const links = {\n      'Home': '/portfolio' ,\n      'Github': 'https://github.com/chiexplores',\n      'Medium': 'https://medium.com/@chi.huynh'\n    }\n    const navLinks = sections.map((section, idx) => {\n      return (\n        <>\n          <li><a href={links[section]} key={idx}>{section}</a></li>\n        </>\n      )\n    });\n\n    return (\n      <>\n        <nav>\n          <h2 className=\"logo\">{this.props.logoTitle}</h2>\n          <ul>\n            {navLinks} \n          </ul>\n        </nav>\n      </>\n    )\n  }\n}\n\nexport default Navigation\n\n\n","import React from 'react';\nimport desktopImage from './images/cloud-background.jpg';\nimport './Header.scss';\nimport Nav from './Navigation'\n\n\nconst background = window.innerWidth >= 650 ? { backgroundImage: `url(${desktopImage})` } : null;\nconst nav = window.innerWidth < 650 ? <Nav /> : '';\n\nfunction Header() {\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth\n  });\n\n  React.useEffect(() => {\n    function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n      window.addEventListener('resize', handleResize)\n      return _ => {\n        window.removeEventListener('resize', handleResize)\n      }\n    }\n  })\n  return (\n    <>\n    {nav}\n    <header style={background}>\n      <div className=\"title-name\">Chi</div>\n      <div className=\"header-text\">\n        <p>A Little Serious.</p>\n        <p>A Little Silly.</p>\n        <p>Very Dedicated.</p>\n      </div>\n    </header>\n  </>\n\n  )\n}\n\nexport default Header;\n\n","\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\n\n\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    const { status } = this.state;\n    return (\n      <Form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/mpzdrnyv\"\n        method=\"POST\"\n      >\n        <Form.Label>Email:</Form.Label>\n        <Form.Control type=\"email\" name=\"email\" />\n        <Form.Label>Message:</Form.Label>\n        <Form.Control type=\"text\" name=\"message\" as=\"textarea\" />\n        {status === \"SUCCESS\" ? <p>Thank you!</p> : <Button type=\"submit\">Submit</Button>}\n        {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n      </Form>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}","import React, { useState } from 'react';\nimport Projects from './Project';\nimport About from './About';\nimport Twentyfortyeight from './2048';\nimport AStardustTruce from './AStardustTruce';\nimport DTR from './Dtr.jsx';\nimport FlightLogger from './FlightLogger.jsx';\nimport Nav from './Navigation.jsx';\nimport Header from './Header.jsx';\nimport Contact from './Contact.jsx';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport './App.scss';\nconst nav = window.innerWidth > 650 ? <Nav /> : '';\n\nfunction App() {\n  const [projectNum, setProjectNum] = useState(0);\n  const onClick = (e) => {\n    setProjectNum(parseInt(e.target.id));\n  }\n\n  let main =\n    (projectNum === 0) ?\n      <FlightLogger /> :\n      (projectNum === 1) ?\n        <FlightLogger /> :\n        (projectNum === 2) ?\n          <DTR /> :\n          (projectNum === 3) ?\n            <Twentyfortyeight /> :\n            (projectNum === 4) ?\n              <AStardustTruce /> :\n              (projectNum === 0)\n\n\n  return (\n    <Container>\n      {/* Stack the columns on mobile by making one full-width and the other half-width */}\n      <Row>\n        <Col xs={12} md={8}>\n          <Header className=\"header\" />\n          {nav}\n        </Col>\n      </Row>\n\n      {/* Columns start at 50% wide on mobile and bump up to 33.3% wide on desktop */}\n      <div className=\"main-body\">\n        <Row>\n          <Col xs={6} md={6}>\n            <aside>\n              <About />\n            </aside>\n          </Col>\n          <Col xs={6} md={6}>\n            <Contact />\n          </Col>\n        </Row>\n        {/* Columns are always 50% wide, on mobile and desktop */}\n        <Row>\n          <Col xs={12} lg={true}>\n            <Projects onClick={onClick} />\n          </Col>\n        </Row>\n        <Row >\n          <Col xs={12} lg={true}>\n            {main}\n          </Col>\n        </Row>\n      </div>\n    </Container>\n  );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}